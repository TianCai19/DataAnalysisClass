n1=rep(1:5)
dim(n1)
apply(n1,f1)
f1=function(i)
{
return(10^i)
}
n1=rep(1:5)
dim(n1)
apply(n1,NULL,f1)
f1=function(i)
{
return(10^i)
}
n1=matrix(1:5)
f1=function(i)
{
return(10^i)
}
n1=matrix(1:5)
apply(n1, MARGIN = 1, f1)
library("Rlab")
?rbern
rbern(100,1/4)
f1=function(i)
{
a=rbern(10^i,1/4)
return(c(mean(a),sd(a)))
}
n1=matrix(1:5)
## apply 只能用在apply上
apply(n1, MARGIN = 1, f1)
f1=function(i)
{
a=rbern(10^i,1/4)
return(c(n,mean(a),sd(a)))
}
n1=matrix(1:5)
## apply 只能用在apply上
apply(n1, MARGIN = 1, f1)
f1=function(i)
{
a=rbern(10^i,1/4)
return(c(i,mean(a),sd(a)))
}
n1=matrix(1:5)
## apply 只能用在apply上
apply(n1, MARGIN = 1, f1)
prob=1/4;
n*prob
prob*(1-prob)
prob=1/4;
prob
prob*(1-prob)
f1=function(i)
{
a=rbern(10^i,1/4)
return(c(i,mean(a),sd(a)))
}
n1=matrix(1:5)
## apply 只能用在apply上
apply(n1, MARGIN = 1, f1)
?c
f1=function(i)
{
a=rbern(10^i,1/4)
return(c(10^i,mean(a),sd(a)))
}
n1=matrix(1:5)
## apply 只能用在apply上
ans1=apply(n1, MARGIN = 1, f1)
ans1(1,:)
ans(1,)
ans1(1,)
ans1[1,]
f1=function(i)
{
a=rbern(10^i,1/4)
return(c(10^i,mean(a),sd(a)))
}
n1=matrix(1:5)
## apply 只能用在apply上
ans1=apply(n1, MARGIN = 1, f1)
colnames(ans1)<-c("n","mean","sd")
f1=function(i)
{
a=rbern(10^i,1/4)
return(c(10^i,mean(a),sd(a)))
}
n1=matrix(1:5)
## apply 只能用在apply上
ans1=apply(n1, MARGIN = 1, f1)
rownames(ans1)<-c("n","mean","sd")
f1=function(i)
{
a=rbern(10^i,1/4)
return(c(10^i,mean(a),sd(a)))
}
n1=matrix(1:5)
## apply 只能用在apply上
ans1=apply(n1, MARGIN = 1, f1)
rownames(ans1)<-c("n","mean","sd")
f1=function(i)
{
a=rbern(10^i,1/4)
return(c(10^i,mean(a),sd(a)))
}
n1=matrix(1:5)
## apply 只能用在apply上
ans1=apply(n1, MARGIN = 1, f1)
rownames(ans1)<-c("n","mean","sd")
ans1
f1=function(i)
{
a=rbern(10^i,1/4)
return(c(10^i,mean(a),(sd(a)^2))
}
f1=function(i)
{
a=rbern(10^i,1/4)
return(c(10^i,mean(a),(sd(a))^2))
}
n1=matrix(1:5)
## apply 只能用在apply上
ans1=apply(n1, MARGIN = 1, f1)
rownames(ans1)<-c("n","mean","sd")
ans1
knitr::opts_chunk$set(echo = TRUE)
for i in(1:5)
for (i in c(1:5))
{
n=10^i;
m=rbern(n,prob)
hist(m)
}
for (i in c(1:5))
{
n=10^i;
m=rbinom(n,prob)
hist(m)
}
for (i in c(1:5))
{
n=10^i;
m=rbinom(n,n,prob)
hist(m)
}
f1=funcion(x,n){
?apply(array, margin, ...)
f1=funcion(x,c1){
f1=funcion(x,c1){
ff=funcion(x,c1){
ff=function(x,c1){
n=c1
ans=(x-n*prob)/(n*prob*(1-prob))
return(ans)
}
f1(2,1)
ff=function(x,n){
ans=(x-n*prob)/(n*prob*(1-prob))
return(ans)
}
f1(2,1)
ff=function(x,n){
ans=(x-n*prob)/(n*prob*(1-prob))
return(ans)
}
ff(2,1)
for (i in c(1:5))
{
n=10^i;
m=rbinom(n,n,prob)
m1=apply(m, 1, ff,c1=n)
hist(m1)
}
for (i in c(1:5))
{
n=10^i;
m=matrix(rbinom(n,n,prob))
m1=apply(m, 1, ff,c1=n)
hist(m1)
}
for (i in c(1:5))
{
n=10^i;
m=matrix(rbinom(n,n,prob))
m1=apply(m,1, ff,n=n)
hist(m1)
}
for (i in c(1:5))
{
n=10^i;
m=matrix(rbinom(n,n,prob))
m1=apply(m,1, ff,n=n)
hist(m1,freq = F)
}
ff=function(x,n){
ans=(x-n*prob)/(n*prob*(1-prob))
return(ans)
}
ff(2,2)
ff=function(x,n){
ans=(x-n*prob)/(n*prob*(1-prob))
return(ans)
}
ff(2,2)
a=2-2*0.4
b=2*0.4*0.6
a/b
ff=function(x,n){
ans=(x-n*prob)/(n*prob*(1-prob))
return(ans)
}
prob
ff(2,2)
a=2-2*0.4
b=2*0.4*0.6
a/b
ff=function(x,n){
ans=(x-n*prob)/(n*prob*(1-prob))
return(ans)
}
prob
ff(2,2)
a=2-2*prob
b=2*prob*(1-prob)
a/b
for (i in c(1:5))
{
n=10^i;
m=matrix(rbinom(n,n,prob))
m1=apply(m,1, ff,n=n)
hist(m1,freq=F)
curve(dnorm(x),add=T)
}
?norm
for (i in c(1:5))
{
n=10^i;
m=matrix(rbinom(n,n,prob))
m1=apply(m,1, ff,n=n)
hist(m1,freq=F)
curve(qnorm(1,0),add=T)
}
curve(qnorm(1,0)
)
x <- seq(5, 15, length=1000)
y <- dnorm(x, mean=10, sd=3)
plot(x, y, type="l", lwd=1)
n=10^5
m=matrix(rbinom(n,n,prob))
m1=apply(m,1, ff,n=n)
hist(m1,freq=F)
x <- seq(5, 15, length=1000)
y <- dnorm(x, mean=10, sd=3)
plot(x, y, type="l", lwd=1)
n=10^5
m=matrix(rbinom(n,n,prob))
hist(m)
m1=apply(m,1, ff,n=n)
hist(m1,freq=F)
x <- seq(5, 15, length=1000)
y <- dnorm(x, mean=10, sd=3)
plot(x, y, type="l", lwd=1)
n=10^5
m=matrix(rbinom(n,n,prob))
hist(m,freq=F)
m1=apply(m,1, ff,n=n)
hist(m1,freq=F)
x <- seq(5, 15, length=1000)
y <- dnorm(x, mean=10, sd=3)
plot(x, y, type="l", lwd=1)
n=10^5
m=matrix(rbinom(n,n,prob))
hist(m,freq=F)
m1=apply(m,1, ff,n=n)
m[1:10,]
m1[1:10,]
n=10^5
m=matrix(rbinom(n,n,prob))
hist(m,freq=F)
m1=apply(m,1, ff,n=n)
m[1:10,1]
m1[1,1:10]
n=10^5
m=matrix(rbinom(n,n,prob))
hist(m,freq=F)
m1=apply(m,1, ff,n=n)
m[1:10,1]
m1[1:10,1]
n=10^5
m=matrix(rbinom(n,n,prob))
hist(m,freq=F)
m1=apply(m,1, ff,n=n)
m[1:10,1]
m1[1:10,1]
View(ma)
n=10
m=matrix(rbinom(n,n,prob))
hist(m,freq=F)
m1=apply(m,1, ff,n=n)
m[1:10,1]
hist(m1,freq=F)
n=10
m=matrix(rbinom(n,n,prob))
hist(m,freq=F)
m1=apply(m,1, ff,n=n)
hist(m1,freq=F)
hist(m,freq=F)
n=1000
m=matrix(rbinom(n,n,prob))
hist(m,freq=F)
m1=apply(m,1, ff,n=n)
hist(m1,freq=F)
hist(m,freq=F)
n=1000
m=matrix(rbinom(n,n,prob))
m1=apply(m,1, ff,n=n)
hist(m1,freq=F)
hist(m,freq=F)
n=1000
m=matrix(rbinom(n,n,prob))
m1[1:10,]
n=1000
m=matrix(rbinom(n,n,prob))
m1[1:10,1]
View(ma)
n=1000
m=matrix(rbinom(n,n,prob))
m1=apply(m,1, ff,n=n)
m1[1:10,1]
n=1000
m=matrix(rbinom(n,n,prob))
m1=apply(m,1, ff,n=n)
m[1:10,1]
m1[1:10,1]
for (i in c(1:5))
{
n=10^i;
m=matrix(rbinom(n,n,prob))
m1=apply(m,1, ff,n=n)
hist(m1,freq=F)
curve(qnorm(1,0),add=T)
}
for (i in c(1:5))
{
n=10^i;
m=matrix(rbinom(n,n,prob))
m1=apply(m,1, ff,n=n)
hist(m1,freq=F)
# curve(qnorm(1,0),add=T)
}
for (i in c(1:5))
{
n=10^i;
m=matrix(rbinom(n,n,prob))
m1=apply(m,1, ff,n=n)
hist(m,freq= F)
# curve(qnorm(1,0),add=T)
}
n=1000
m=matrix(rbinom(n,n,prob))
m1=apply(m,1, ff,n=1000)
m[1:10,1]
m1[1:10,1]
n=1000
m=matrix(rbinom(n,n,prob))
f=function(x){
ans=(x-n*prob)/(n*prob*(1-prob))
return(ans)
}
m1=apply(m,1, f,n=1000)
n=1000
m=matrix(rbinom(n,n,prob))
f=function(x){
ans=(x-n*prob)/(n*prob*(1-prob))
return(ans)
}
m1=apply(m,1, f)
m[1:10,1]
m1[1:10,1]
n=1000
m=matrix(rbinom(n,n,prob))
f=function(x){
ans=(x-n*prob)/(n*prob*(1-prob))
return(ans)
}
m1=apply(m,1, f)
m[1:10,1]
m1[1:10]
hist(m1,freq=F)
hist(m,freq=F)
n=1000
m=matrix(rbinom(n,n,prob))
f=function(x){
ans=(x-n*prob)/sqrt((n*prob*(1-prob)))
return(ans)
}
m1=apply(m,1, f)
m[1:10,1]
m1[1:10]
hist(m1,freq=F)
hist(m,freq=F)
ff=function(x,n){
ans=(x-n*prob)/sqrt((n*prob*(1-prob)))
return(ans)
}
for (i in c(1:5))
{
n=10^i;
m=matrix(rbinom(n,n,prob))
m1=apply(m,1, ff,n=n)
hist(m,freq= F)
# curve(qnorm(1,0),add=T)
}
for (i in c(1:5))
{
n=10^i;
m=matrix(rbinom(n,n,prob))
m1=apply(m,1, ff,n=n)
hist(m1,freq= F)
# curve(qnorm(1,0),add=T)
}
curve
?curve
for (i in c(1:5))
{
n=10^i;
m=matrix(rbinom(n,n,prob))
m1=apply(m,1, ff,n=n)
hist(m1,freq= F)
curve(dnorm(x),add=T)
}
install.packages(ggplot2)
install.packages("ggplot2")
View(zseq)
?$
getwd()
setwd("C:\Users\52511\OneDrive\学习资料\数据分析\Rscripts\class5")
setwd("C:/Users/52511/OneDrive/学习资料/数据分析/Rscripts/class5")
x=rnorm(1000,1,1)
mean(x)
n <- 1000;
mean <- 1;
x <- rnorm(n,mean,1)
mean(x)
x[1:10]<-
n <- 1000;
mean <- 1;
x <- rnorm(n,mean,1)
mean(x)
x[1:10] <-30*mean
n <- 1000;
mean <- 1;
x <- rnorm(n,mean,1)
mean(x)
x[1:10] <-30*mean
mean(x)
n <- 1000;
mean <- 1;
x <- rnorm(n,mean,1)
mean(x)
x[1:10] <-30*mean
mean(x)
boxplot(x)
n <- 1000;
mean <- 1;
x <- rnorm(n,mean,1)
mean(x)
boxplot(x)
x[1:10] <-30*mean
mean(x)
boxplot(x)
n <- 1000;
mean <- 1;
x <- rnorm(n,mean,1)
mean(x)
boxplot(x)
title <-"cool"
x[1:10] <-30*mean
mean(x)
boxplot(x)
median(x)
mean(x)
x<=x[-c(1:10)]
x <-x[-c(1:10)];
mean(x)
n <- 1000;
mean <- 1;
x <- rnorm(n,mean,1)
mean(x)
boxplot(x)
title <-"cool"
x[1:10] <-30*mean
mean(x)
boxplot(x)
quantile(x)
n <- 1000;
mean <- 1;
x <- rnorm(n,mean,1)
mean(x)
quantile(x)
boxplot(x)
title <-"cool"
x[1:10] <-30*mean
mean(x)
boxplot(x)
quantile(x)
hist(x
)
hist(x,freq = F,col = "red")
hist(x,freq = F,col = "red",breaks = 3)
