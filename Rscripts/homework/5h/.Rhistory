library(sos)
findFn("deep learning")
findFn("deep learning")
findFn("deep learning")
example(kmean)
"kmeans"
example(kmeans)
#向量排序
fen_shu_xian2016 <- c(
中国科学院大学    = 671,
中央民族大学    = 625,
北京大学    = 678,
中国人民大学    = 670,
清华大学    = 680,
北京交通大学    = 640,
北京科技大学    = 635,
北京化工大学    = 620,
北京邮电大学    = 646,
中国农业大学    = 634,
北京林业大学    = 621
)
sort(fen_shu_xian2016)
print(fen_shu_xian2016,
trim = TRUE,
width = 3,
justify = "right")
sort(fen_shu_xian2016, decreasing = TRUE)
order(fen_shu_xian2016, decreasing = TRUE)
#> [1]  5  3  1  4  9  6  7 10  2 11  8
fen_shu_xian2016[order(fen_shu_xian2016, decreasing = TRUE)]
#倒序
yw <- c(94, 87, 92, 91, 85, 92)
sort(yw)
#> [1] 85 87 91 92 92 94
rev(yw)
#> [1] 92 85 91 92 87 94
yw[6]
#> [1] 92
yw[length(yw)]
knitr::opts_chunk$set(echo = TRUE)
data1 <- read.csv("data/data1.csv", encoding = "UTF-8");
attach(data1)
lm.sol<-lm(Y~X1+X2+X3)
summary(lm.sol)
lm.step1<-step(lm.sol)
summary(lm.step1)
lm.opt<- lm(Y~X1)
summary(lm.opt)
View(data1)
lm.sol$coefficients
lm.sol<-lm(Y~X1+X2+X3)
lm.sol$coefficients
summary(lm.sol)
summary(lm.sol)
summary(lm.step1)
lm.step1<-step(lm.sol)
summary(lm.step1)
drop1(lm.step1)
lm.sol<-lm(Y~X1)
lm.sol2<-lm(Y~X1)
summary(lm.sol2)
data2 <- read.csv("data/6.8.csv", encoding = "UTF-8");
data2 <- read.csv("data/6.8.csv", encoding = "UTF-8");
summary(glm.sol)
glm.sol<-glm(Y~X1+X2+X3+X4+X5,family=binomial,data=data2)
summary(glm.sol)
cbind(data2, p)
p <- exp(predict(glm.sol,data2))/(1 + exp(yfit))
ffy=predict(glm.sol,data2)
cbind(data2, p)
p <- exp(ffy)/(1 + exp(ffy))
cbind(data2, p)
cbind(data2$X1, p)
cbind(data2$X.d0..f2..U.00BA..c5., p)
p <- exp(ffy)/(1 + exp(ffy))
exp(ffy)/(1 + exp(ffy))
cbind(p)
out1<-cbind(p)
names(out1)<-c("序号","p(生存时间>-200)")
oout1
out1
p
cbind(c)
cbind(p)
glm.step1 <- step(glm.sol)
summary(glm.step1)
drop1(glm.step1)
# 得到各病人生存时间大于等于200天的概率估计值
cbind(p, p2)
yff2 <- predict(glm.step1, data2)
p2 <- exp(yff2)/(1 + exp(yff2))
# 得到各病人生存时间大于等于200天的概率估计值
cbind(p, p2)
setwd("C:/Users/52511/OneDrive/学习资料/dataAnalysis/Rscripts/homework/5h")
DXBZ<-
c(9.30,4.67,0.96,1.38,1.48,2.60,2.15,2.14,6.53,1.47,1.17,0.88,1.23,0.99,
0.98,0.85,1.57,1.14,1.34,0.79,1.24,0.96,0.78,0.81,0.57,1.67,1.10,1.49,1.61,1.85)
CZBZ<-
c(30.55,29.38,24.69,29.24,25.47,32.32,26.31,28.46,31.59,26.43,23.74,
19.97,16.87,18.84,25.18,26.55,23.16,22.57,23.04,19.14,22.53,21.65,14.65,13.85,
3.85,24.36,16.85,17.76,20.27,20.66)
WMBZ<-
c(8.70,8.92,15.21,11.30,15.39,8.81,10.49,10.87,11.04,17.23,17.46,24.43,
15.63,16.22,16.87,16.15,15.79,12.10,10.45,10.61,13.97,
16.24,24.27 ,25.44,44.43,17.62,27.93,27.70,22.06,12.75)
BZ<-data.frame(DXBZ,CZBZ,WMBZ)
name<-c("北京","天津", "河北", "山西","内蒙古","辽宁",
"吉林","黑龙江", "上海", "江苏", "浙江", "安徽", "福建","江西",
"山东", "河南","湖北","湖南","广东", "广西",
"海南","四川","贵州", "云南","西藏", "陕西", "甘肃","青海","宁夏", "新疆")
BZ<-
data.frame(DXBZ,CZBZ,WMBZ,row.names=name
)
BZ.scale<-scale(BZ)
####将数据框BZ中数据进行标准化
BZ.dist<-dist(BZ.scale,method="euclidean")
BZ.complete<-hclust(BZ.dist,"complete")
####最长距离法做聚类分析
BZ.average<-hclust(BZ.dist,"average")
###类平均做聚类分析
BZ.centroid<-hclust(BZ.dist,"centroid")
###重心法做聚类分析
BZ.ward<-hclust(BZ.dist,"ward.D")
opar<-par(mfrow=c(2,2))
opar<-par(mfrow=c(2,2))
plot(BZ.complete,hang=-1,main="CompleteDendrogram")
re.c<-rect.hclust(BZ complete,k=4,border="green")
plot(BZ.average,hang=-1,main= "AverageDendrogram")
re.a<-rect.hclust(BZ.average,k=4,border="blue")
plot(BZ.centroid,hang=- l,main="CentroidDendrogram")
re.o<-rect.hclust(BZ.centroid,k=4,border="red")
plot(BZ.ward,hang=- 1,main="WardDendrogram")
re.w<-rect.hclust( BZ.ward ,k=4 ,border="grey")
opar<-par(mfrow=c(2,2))
plot(BZ.complete,hang=-1,main="CompleteDendrogram")
re.c<-rect.hclust(BZ complete,k=4,border="green")
plot(BZ.average,hang=-1,main= "AverageDendrogram")
re.a<-rect.hclust(BZ.average,k=4,border="blue")
plot(BZ.centroid,hang=- 1,main="CentroidDendrogram")
re.o<-rect.hclust(BZ.centroid,k=4,border="red")
plot(BZ.ward,hang=- 1,main="WardDendrogram")
re.w<-rect.hclust( BZ.ward ,k=4 ,border="grey")
opar<-par(mfrow=c(2,2))
plot(BZ.complete,hang=-1,main="CompleteDendrogram")
re.c<-rect.hclust(BZ.complete,k=4,border="green")
plot(BZ.average,hang=-1,main= "AverageDendrogram")
re.a<-rect.hclust(BZ.average,k=4,border="blue")
plot(BZ.centroid,hang=- 1,main="CentroidDendrogram")
re.o<-rect.hclust(BZ.centroid,k=4,border="red")
plot(BZ.ward,hang=- 1,main="WardDendrogram")
re.w<-rect.hclust( BZ.ward ,k=4 ,border="grey")
opar<-par(mfrow=c(2,2))
plclust(BZ.complete,hang=- l,main="CompleteDendrogram")
re.c<-rect.hclust( BZ.complete,k=4,border="green")
plclust(BZ.average,hang=- l,main="AverageDendrogram")
re.a<-rect.hclust(BZ.average,k=4,border= "blue")
plclust(BZ .centroid,hang=- l,main="CentroidDendrogram")
opar<-par(mfrow=c(2,2))
plclust(BZ.complete,hang=- 1,main="CompleteDendrogram")
re.c<-rect.hclust( BZ.complete,k=4,border="green")
plclust(BZ.average,hang=- 1,main="AverageDendrogram")
re.a<-rect.hclust(BZ.average,k=4,border= "blue")
plclust(BZ .centroid,hang=- 1,main="CentroidDendrogram")
re.o<-rect.hclust(BZ.centroid,k=4,border="red")
plclust(BZ.ward,hang=- 1,main="WardDendrogram")
re.w<-rect.hclust( BZ.ward ,k=4 ,border="grey")
opar<-par(mfrow=c(2,2))
plclust(BZ.complete,hang=- 1,main="CompleteDendrogram")
re.c<-rect.hclust( BZ.complete,k=4,border="green")
plclust(BZ.average,hang=- 1,main="AverageDendrogram")
re.a<-rect.hclust(BZ.average,k=4,border= "blue")
plclust(BZ.centroid,hang=- 1,main="CentroidDendrogram")
re.o<-rect.hclust(BZ.centroid,k=4,border="red")
plclust(BZ.ward,hang=- 1,main="WardDendrogram")
re.w<-rect.hclust( BZ.ward ,k=4 ,border="grey")
###做动态聚类分析kmeans，迭代20次
BZ.km<-kmeans(BZ.scale,4,nstart=20);
BZ.km
